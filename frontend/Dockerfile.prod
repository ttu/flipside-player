FROM node:22-alpine as builder

WORKDIR /app

# Copy workspace package files
COPY package*.json ./
COPY package-lock.json ./

# Copy frontend package.json
COPY ./frontend/package*.json ./frontend/

# Install workspace dependencies
RUN npm ci --workspace=frontend && npm cache clean --force

# Copy source code
COPY ./frontend ./frontend

# Set working directory to frontend
WORKDIR /app/frontend

# Build arguments for environment variables
ARG VITE_API_BASE_URL
ARG VITE_AUTH_BASE_URL
ARG VITE_APP_NAME

# Set environment variables for build
# Use build args if provided, otherwise use defaults
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://127.0.0.1:3001/api}
ENV VITE_AUTH_BASE_URL=${VITE_AUTH_BASE_URL:-http://127.0.0.1:3001/api}
ENV VITE_APP_NAME=${VITE_APP_NAME:-"FlipSide Player"}

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine

# Install curl for health checks
RUN apk --no-cache add curl

# Copy custom nginx config
COPY ./frontend/nginx.conf /etc/nginx/nginx.conf

# Copy built application from builder stage
COPY --from=builder /app/frontend/dist /usr/share/nginx/html

# Use existing nginx user (nginx Alpine image already has nginx user/group)

# Change ownership of nginx directories to existing nginx user
RUN chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

USER nginx

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:80 || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]